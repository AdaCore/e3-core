import os

from e3.anod.loader import spec
from e3.anod.spec import Anod
from e3.fs import VCS_IGNORE_LIST, sync_tree


class e3(spec('anod')):
    """Python framework to ease the dev of portable automated build systems.

    Build whl file for e3-* projects, install them with their needed
    dependencies and test them.
    Python version to build e3 on is provided through the qualifier 'version'
    """

    @property
    def source_pkg_build(self):

        def prepare_src(repos, dest):
            # only one repo
            working_dir = list(repos.values())[0]['working_dir']

            with open(os.path.join(working_dir, '.gitignore')) as f:
                ignore_list = f.readlines()

            sync_tree(working_dir, dest,
                      ignore=list(VCS_IGNORE_LIST) + ignore_list,
                      delete=True)

        return [Anod.SourceBuilder(
            name='e3-core-src',
            fullname=lambda x: 'e3-core-src.tgz',
            prepare_src=prepare_src,
            checkout=['e3-core-github'])]

    test_deps = [Anod.Dependency('python-virtualenv',
                                 local_name='python',
                                 require='installation')]

    test_source_list = [Anod.Source('e3-core-src', publish=True)]

    @Anod.primitive()
    def test(self):
        self.deps['python'].setenv()
        self.shell('tox', cwd=self['SRC_DIR'])

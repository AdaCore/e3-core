[tox]
envlist = py37-cov,checkstyle

[testenv]
deps =
     pytest
     mock
     httpretty
     pyyaml
     cov: pytest-cov
     cov: coverage
     codecov: codecov

passenv = APPVEYOR* TRAVIS TRAVIS_* CI

# Run testsuite with coverage when '-cov' is in the env name
commands=
    {envpython} {toxinidir}/tests/gen-cov-config.py {toxinidir}/.coveragerc
    py.test --ignore=build -vv \
    ci: --ci \
    cov: --cov={envsitepackagesdir}/e3 --cov-report= --cov-fail-under=0 \
    []
    cov: {envpython} {toxinidir}/tests/fix-coverage-paths.py \
    cov:     {envsitepackagesdir} {toxinidir}/.coverage
    cov: coverage html --fail-under=0
    cov: coverage report
    codecov: codecov

[testenv:checkstyle]
deps =
      pyflakes>=2.1.1
      pydocstyle>=2.0.0
      black
commands =
        black -q --check {envsitepackagesdir}/e3 {toxinidir}/tests
        pyflakes {envsitepackagesdir}/e3 {toxinidir}/tests
        pydocstyle {envsitepackagesdir}/e3 {toxinidir}/tests

[testenv:security]
# Run bandit checks. Accept yaml.load(), pickle, and exec since this
# is needed by e3. Also temporarly accept sha1 usage until this is replaced by
# more secure alternative. There is also e3.env.tmp_dir that returns the TMPDIR
# environment variable. Don't check for that.
deps =
      bandit
      safety
commands =
      bandit -r e3 -ll -ii -s B102,B108,B301,B303,B506
      safety check --full-report

[testenv:docs]
deps =
     pytest
     mock
     httpretty
     sphinx
     sphinx-autoapi
     sphinx_rtd_theme
commands =
      py.test --collect-only --requirement-coverage-report={toxinidir}/docs/source/requirement_coverage.yaml
      python docs/generate-req-coverage.py {toxinidir}/docs/source/requirements.yaml \
          {toxinidir}/docs/source/requirement_coverage.yaml \
          {toxinidir}/docs/source/requirement_coverage.rst
      python -msphinx -M html {toxinidir}/docs/source {toxinidir}/docs/build

[pydocstyle]
ignore = D100,D101,D102,D102,D103,D104,D105,D106,D107,D203,D403,D213

[pytest]
addopts = --failed-first
